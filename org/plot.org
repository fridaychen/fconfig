:PROPERTIES:
:AUTOINGEST: TRUE
:END:
#+startup: inlineimages

#+PROPERTY: header-args :var plotfont=(symbol-value '*fc-plot-font*)
#+PROPERTY: header-args+ :var plotbg=(symbol-value '*fc-plot-bg*)
#+PROPERTY: header-args+ :var plotdpi=90
#+PROPERTY: header-args+ :var ptitle=""
#+PROPERTY: header-args+ :var fname=""
#+PROPERTY: header-args+ :var datatable=""

* Draw functions/datafile by Gnuplot

#+NAME: draw_func
#+BEGIN_SRC gnuplot :var cmd="" :var xl="" :var yl="" :results file
  reset

  set terminal png enhanced background rgb plotbg
  set term png font plotfont
  set title ptitle
  set grid

  set xlabel xl
  set ylabel yl

  eval "plot ".cmd
#+END_SRC

Example:
#+CALL: draw_func(cmd="[-10:10] [-2:2] sin(x) title 'sin', cos(x) title 'cos'", xl="X", yl="Y", ptitle="你好，世界!") :file test-func.png

#+RESULTS:
[[file:test-func.png]]

#+CALL: draw_func(cmd="sin(x), for [col=2:4] 'test-data.txt' using 1:col with lp", xl="hello") :file test-datafile.png

#+RESULTS:
[[file:test-datafile.png]]

* Draw bar by Python

#+NAME: draw_bar
#+BEGIN_SRC python :var height=0 :var width=0 :results file
  import matplotlib.pyplot as plt
  from matplotlib import rc as prc

  prc("font", family=plotfont)

  x, y = zip(*datatable)

  if height != 0 and width != 0:
      plt.figure(figsize=(width, height), dpi=plotdpi, facecolor=plotbg)
  else:
      plt.figure(dpi=plotdpi, facecolor=plotbg)

  ax = plt.axes()
  ax.set_title(ptitle)
  ax.set_facecolor(plotbg)
  ax.grid(color="gray", linestyle="dashed")

  plt.bar(range(len(y)), y, width=0.6)
  plt.xticks(range(len(y)), x)
  plt.savefig(fname, bbox_inches="tight")

  return fname
#+END_SRC

#+tblname: hello-bar
| city   | population |
|--------+------------|
| foo    |        100 |
| bar    |        300 |
| わたし |         39 |
| world  |         20 |
| 我们   |        -100 |

#+call: draw_bar(datatable=hello-bar, fname="test-bar.png",height=3,width=8,ptitle="Hello world!")

#+RESULTS:
[[file:test-bar.png]]

* Draw pie by Python

#+NAME: draw_pie
#+BEGIN_SRC python :results file
  import matplotlib.pyplot as plt
  from matplotlib import rc as prc

  plt.figure(dpi=plotdpi, facecolor=plotbg)
  prc("font", family=plotfont)

  x, y = zip(*datatable)

  plt.title(ptitle)
  plt.pie(y, labels=x, shadow=True, autopct='%.0f%%')
  plt.savefig(fname, bbox_inches='tight')

  return fname
#+END_SRC

#+tblname: hello-pie
| city   | population |
|--------+------------|
| foo    |        100 |
| bar    |        800 |
| わたし |         39 |
| world  |         20 |
| 我们   |        100 |

#+call: draw_pie(datatable=hello-pie, fname="test-pie.png",ptitle="Hello world!")

#+RESULTS:
[[file:test-pie.png]]

* Draw histogram by Python

#+NAME: draw_histogram
#+BEGIN_SRC python :results file
import matplotlib.pyplot as plt

x = *datatable

plt.hist(x)
plt.savefig(fname)

return fname
#+END_SRC

* Example

#+NAME: draw_test
#+BEGIN_SRC python :var fname="histgram.svg" :var table=histodata :results file
import matplotlib.pyplot as plt

x, y = zip(*table)

fig = plt.figure()
axes = fig.add_subplot(1,1,1)
axes.plot(y, z, marker='o')
fig.savefig(fname)

return fname
#+END_SRC
