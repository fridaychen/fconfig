:PROPERTIES:
:AUTOINGEST: TRUE
:END:

#+PROPERTY: header-args :var font=(symbol-value '*fc-plot-font*)
#+PROPERTY: header-args+ :var bg=(symbol-value '*fc-plot-bg*)
#+PROPERTY: header-args+ :var dpi=90

#+PROPERTY: header-args+ :var height=0
#+PROPERTY: header-args+ :var width=0

#+PROPERTY: header-args+ :var title=""
#+PROPERTY: header-args+ :var xlabel=""
#+PROPERTY: header-args+ :var ylabel=""

#+PROPERTY: header-args+ :var output=""
#+PROPERTY: header-args+ :var datafile=""
#+PROPERTY: header-args+ :var datatable=""

#+PROPERTY: header-args+ :var xrange=""

#+NAME: plot
#+HEADER: :var f1="" :var l1=""
#+HEADER: :var f2="" :var l2=""
#+HEADER: :var f3="" :var l3=""
#+HEADER: :var f4="" :var l4=""
#+HEADER: :var f5="" :var l5=""
#+HEADER: :var f6="" :var l6=""
#+BEGIN_SRC python :results file
  import fmath.plot as fp
  import numpy as np

  import math

  fp.setup(
      height=height,
      width=width,
      dpi=dpi,
      bg=bg,
      title=title,
      font=font,
      xlabel=xlabel,
      ylabel=ylabel,
  )
  fp.grid()

  min, max = eval(xrange)
  xa = np.arange(min, max, 0.1)

  if f1 != "":
      fp.plotf(xa, eval(f1), label=l1)
  if f2 != "":
      fp.plotf(xa, eval(f2), label=l2)
  if f3 != "":
      fp.plotf(xa, eval(f3), label=l3)
  if f4 != "":
      fp.plotf(xa, eval(f4), label=l4)
  if f5 != "":
      fp.plotf(xa, eval(f5), label=l5)
  if f6 != "":
      fp.plotf(xa, eval(f6), label=l6)

  fp.save(output)

  return output
#+END_SRC

#+NAME: plotbar
#+BEGIN_SRC python :colnames no :results file
  import fmath.plot as fp

  x, y = zip(*datatable)

  fp.setup(
      height=height,
      width=width,
      dpi=dpi,
      bg=bg,
      title=title,
      font=font,
      xlabel=x[0],
      ylabel=y[0],
  )

  fp.grid(axis="y", caxis=False)

  fp.bar(x[1:], y[1:])

  fp.save(output)

  return output
#+END_SRC

#+NAME: plotpie
#+BEGIN_SRC python :results file
  import fmath.plot as fp

  x, y = zip(*datatable)

  fp.setup(height=height, width=width, dpi=dpi, bg=bg, title=title, font=font)

  fp.pie(x, y)

  fp.save(output)

  return output
#+END_SRC

#+NAME: plothist
#+BEGIN_SRC python :var bins=10 :var type="bar" :var delimiter="" :results file
  import fmath.plot as fp

  fp.setup(height=height, width=width, dpi=dpi, bg=bg, title=title, font=font)

  fp.grid(axis="y", caxis=False)

  if delimiter == "":
      delimiter = None

  fp.hist(fp.loadtxt(datafile), bins=bins, type=type)

  fp.save(output)

  return output
#+END_SRC
